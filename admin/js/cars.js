async function get_cars() {
    let response = await fetch("http://localhost:8000/api/car/all")

    if (response.ok) {
        let json = await response.json()
        return json
    } else {
        alert("–û—à–∏–±–∫–∞ HTTP: " + response.status)
    }
}

async function render_cars() {
    let template = 
    '<tr>'
        + '<th scope="row">{–ò–î}</th>'
        + '<td><img src="{–ö–ê–†–¢–ò–ù–ö–ê}" width="50px" class="img-fluid rounded-start" alt="..."></td>'
        + '<td>{–ú–ê–†–ö–ê}</td>'
        + '<td>{–•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò –ê–í–¢–û–ú–û–ë–ò–õ–Ø}</td>'
        + '<td>{–¶–ï–ù–ê} –†</td>'
        + '<td>'
        +  '<button class="btn btn-danger" onclik = "delete_car({–ò–î})">üóëÔ∏è</button>' 
        + '</td>'
    + '</tr>'
    let cars = await get_cars()
    let container = document.getElementById("cars")
    cars.forEach(element => {
        car = template
        car = car.replace("{–ò–î}", element.id)
        car = car.replace("{–ú–ê–†–ö–ê}", element.name)
        car = car.replace("{–•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò –ê–í–¢–û–ú–û–ë–ò–õ–Ø}", element.description)
        car = car.replace("{–¶–ï–ù–ê}", element.price)
        car = car.replace("{–ö–ê–†–¢–ò–ù–ö–ê}", element.photo)
        container.innerHTML += car
    })
}
render_cars()